#!/bin/sh
# File Managed by Puppet
#
# /etc/init.d/azkaban-solo -- startup script for the Azkaban solo server (jetty)
#
### BEGIN INIT INFO
# Provides:          azkaban-solo
# Required-Start:    $local_fs $remote_fs $network
# Required-Stop:     $local_fs $remote_fs $network
# Should-Start:      $named
# Should-Stop:       $named
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: Start Azkaban solo server
# Description:       Start the Azkaban solo server (jetty)
### END INIT INFO

set -e

PATH=/bin:/usr/bin:/sbin:/usr/sbin
NAME=`basename ${0}`
DESC="Azkaban solo server"
DEFAULT=/etc/default/${NAME}


[[ `id -u` -ne 0 ]] && {
  echo "You need root privileges to run this script"
  exit 1
}
 
[[ -r /etc/default/locale ]] && {
  . /etc/default/locale
  export LANG
}

. /lib/lsb/init-functions

[[ -r /etc/default/rcS ]] && . /etc/default/rcS


# Java environment
[[ -r /etc/profile.d/java.sh ]] && . /etc/profile.d/java.sh

[[ -n "${JAVA_HOME}" ]] || {

  log_failure "JAVA_HOME environment variable is not set"
  exit 1
}

# The following variables can be overwritten in $DEFAULT
AZKABAN_USER=azkaban
AZKABAN_GROUP=azkaban
AZKABAN_HOME="/opt/azkaban-solo"
AZKABAN_SH="${AZKABAN_HOME}/bin/azkaban-solo.sh"
AZKABAN_EXECUTOR_PORT="12321"
AZKABAN_TMP=/tmp/`basename ${0}`
AZKABAN_START_TIMEOUT=5


[[ -z "${JAVA_OPTS}" ]] && JAVA_OPTS="-Djava.awt.headless=true -Xmx3G"

# Overwrite settings from default file
[[ -f "${DEFAULT}" ]] && . "${DEFAULT}"

[[ -x "${AZKABAN_SH}" ]] || {

  log_failure_msg "${NAME} is not installed"
  exit 1
}

# Define other required variables
AZKABAN_PID="/var/run/${NAME}.pid"
AZKABAN_SH="${AZKABAN_HOME}/bin/azkaban-solo.sh"


##
# Call the azkaban service script
azkaban_solo_sh( ) {

  local command=${1}

  case ${command} in
    start|stop)
      ${AZKABAN_SH} ${command}
      log_daemon_msg "Doing ${command} with ${AZKABAN_SH}"
      ;;
  esac
}


##
# ::main::
case "$1" in
  start)
    [[ -z "${JAVA_HOME}" ]] && {

      log_failure_msg "no JDK found - please set JAVA_HOME"
      exit 1
    }

    [[ -d "${AZKABAN_HOME}/conf" ]] || {

      log_failure_msg "invalid AZKABAN_HOME: ${AZKABAN_HOME}"
      exit 1
    }

    log_daemon_msg "Starting ${DESC}" "${NAME}"

    if start-stop-daemon --test --start --pidfile "${AZKABAN_PID}" --user ${AZKABAN_USER} --exec "${JAVA_HOME}/bin/java" >/dev/null; then

      #Â Regenerates the tmp directory
      rm -rf "${AZKABAN_TMP}"
      mkdir -p "${AZKABAN_TMP}" || {

        log_failure_msg "could not create temporary directory"
        exit 1
      }

      chown ${AZKABAN_USER} "${JVM_TMP}"

      azkaban_solo_sh start
      sleep ${AZKABAN_START_TIMEOUT}

      if start-stop-daemon --test --start --pidfile "${AZKABAN_PID}" --user ${AZKABAN_USER} --exec "${JAVA_HOME}/bin/java" >/dev/null; then

        [[ -f "${AZKABAN_PID}" ]] && rm -f "${AZKABAN_PID}"

        log_end_msg 1
      else
        log_end_msg 0
      fi
    else

      log_progress_msg "(already running)"
      log_end_msg 0
    fi
    ;;

  stop)
    log_daemon_msg "Stopping ${DESC}" "${NAME}"

    set +e
    if [ -f "${AZKABAN_PID}" ]; then

      start-stop-daemon --stop --pidfile "${AZKABAN_PID}" --user "${AZKABAN_USER}" --retry=TERM/20/KILL/5 >/dev/null

      case ${?} in
        1) log_progress_msg "${DESC} is not running but pid file exists, cleaning up"
           ;;  
        3) PID="`head -1 ${AZKABAN_PID}`"
           log_failure_msg "Failed to stop ${NAME} (pid ${PID})"
           exit 1
           ;;
      esac

      rm  -f "${AZKABAN_PID}"
      rm -rf "${AZKABAN_TMP}"
    else

      log_progress_msg "(not running)"
    fi

    log_end_msg 0
    set -e
    ;;

  restart)
    ${0} stop
    ${0} start
    ;;

  *)
    log_success_msg "Usage: $0 {start|stop|restart}"
    exit 1
    ;;
esac

exit 0

